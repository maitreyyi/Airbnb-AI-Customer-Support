{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS TUF\\\\Documents\\\\Files\\\\code\\\\Airbnb-AI-Customer-Support\\\\frontend\\\\src\\\\components\\\\chatbox.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"../css/chatbox.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chatbox() {\n  _s();\n  const [chatHistory, setChatHistory] = useState([]);\n  const [userInput, setUserInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const bottomRef = useRef(null);\n  const sendMessage = async event => {\n    event.preventDefault();\n    if (loading) return;\n    setLoading(true);\n    try {\n      const response = await fetch(\"http://localhost:5000/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          userInput\n        })\n      });\n      const data = await response.json();\n      setChatHistory(prevChatHistory => [...prevChatHistory, {\n        type: \"user\",\n        text: userInput\n      }, {\n        type: \"bot\",\n        text: data.response\n      }]);\n      setUserInput(\"\");\n    } catch (error) {\n      console.error(\"Error:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    var _bottomRef$current;\n    // Scroll to the bottom of the chat history whenever it updates\n    (_bottomRef$current = bottomRef.current) === null || _bottomRef$current === void 0 ? void 0 : _bottomRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [chatHistory]);\n  useEffect(() => {}, [loading]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"AI Assistant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chat-history\",\n      children: [chatHistory.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: msg.type === \"user\" ? \"user-message\" : \"bot-message\",\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: bottomRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userInput,\n        onChange: e => setUserInput(e.target.value),\n        placeholder: \"Enter your message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"pink-btn\",\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"loader\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"loader.gif\",\n        alt: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbox, \"3NKDurnh6D7cnZO0sKmZDlElDAA=\");\n_c = Chatbox;\nvar _c;\n$RefreshReg$(_c, \"Chatbox\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Chatbox","_s","chatHistory","setChatHistory","userInput","setUserInput","loading","setLoading","bottomRef","sendMessage","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","prevChatHistory","type","text","error","console","_bottomRef$current","current","scrollIntoView","behavior","id","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","className","ref","onSubmit","value","onChange","e","target","placeholder","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/ASUS TUF/Documents/Files/code/Airbnb-AI-Customer-Support/frontend/src/components/chatbox.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"../css/chatbox.css\";\r\n\r\nexport default function Chatbox() {\r\n  const [chatHistory, setChatHistory] = useState([]);\r\n  const [userInput, setUserInput] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const bottomRef = useRef(null);\r\n\r\n  const sendMessage = async (event) => {\r\n    event.preventDefault();\r\n    if (loading) return;\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/chat\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ userInput }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      setChatHistory((prevChatHistory) => [\r\n        ...prevChatHistory,\r\n        { type: \"user\", text: userInput },\r\n        { type: \"bot\", text: data.response },\r\n      ]);\r\n      setUserInput(\"\");\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Scroll to the bottom of the chat history whenever it updates\r\n    bottomRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [chatHistory]);\r\n\r\n  useEffect(() => {}, [loading]);\r\n\r\n  return (\r\n    <div id=\"chat-container\">\r\n      <h4>AI Assistant</h4>\r\n      <div id=\"chat-history\">\r\n        {chatHistory.map((msg, index) => (\r\n          <div\r\n            key={index}\r\n            className={msg.type === \"user\" ? \"user-message\" : \"bot-message\"}\r\n          >\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n        {/* Reference to the bottom of the chat */}\r\n        <div ref={bottomRef}></div>\r\n      </div>\r\n      <form onSubmit={sendMessage}>\r\n        <input\r\n          type=\"text\"\r\n          value={userInput}\r\n          onChange={(e) => setUserInput(e.target.value)}\r\n          placeholder=\"Enter your message\"\r\n        />\r\n        <button className=\"pink-btn\" type=\"submit\">\r\n          Send\r\n        </button>\r\n      </form>\r\n      {loading && (\r\n        <div id=\"loader\">\r\n          <img src=\"loader.gif\" alt=\"Loading...\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}