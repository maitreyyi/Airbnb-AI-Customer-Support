{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Websites\\\\Airbnb-chatbot\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [chatHistory, setChatHistory] = useState([]);\n  const [userInput, setUserInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const sendMessage = async event => {\n    event.preventDefault();\n    setLoading(true);\n    const response = await fetch('http://localhost:5000/chat', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userInput\n      })\n    });\n    const data = await response.json();\n    setChatHistory([...chatHistory, {\n      type: 'user',\n      text: userInput\n    }, {\n      type: 'bot',\n      text: data.response\n    }]);\n    setUserInput('');\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"AI Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"chat-history\",\n        children: chatHistory.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: msg.type === 'user' ? 'user-message' : 'bot-message',\n          children: msg.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: sendMessage,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userInput,\n          onChange: e => setUserInput(e.target.value),\n          placeholder: \"Enter your message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"loader\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"loader.gif\",\n          alt: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"CM+lO/Ac8DrOMtl3sadv46kUdvQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","chatHistory","setChatHistory","userInput","setUserInput","loading","setLoading","sendMessage","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","type","text","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","onSubmit","value","onChange","e","target","placeholder","src","alt","_c","$RefreshReg$"],"sources":["D:/Projects/Websites/Airbnb-chatbot/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [chatHistory, setChatHistory] = useState([]);\n  const [userInput, setUserInput] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const sendMessage = async (event) => {\n    event.preventDefault();\n    setLoading(true);\n\n    const response = await fetch('http://localhost:5000/chat', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ userInput }),\n    });\n\n    const data = await response.json();\n    setChatHistory([...chatHistory, { type: 'user', text: userInput }, { type: 'bot', text: data.response }]);\n    setUserInput('');\n    setLoading(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <div id=\"chat-container\">\n        <h4>AI Assistant</h4>\n        <div id=\"chat-history\">\n          {chatHistory.map((msg, index) => (\n            <div key={index} className={msg.type === 'user' ? 'user-message' : 'bot-message'}>\n              {msg.text}\n            </div>\n          ))}\n        </div>\n        <form onSubmit={sendMessage}>\n          <input\n            type=\"text\"\n            value={userInput}\n            onChange={(e) => setUserInput(e.target.value)}\n            placeholder=\"Enter your message\"\n          />\n          <button type=\"submit\">Send</button>\n        </form>\n        {loading && <div id=\"loader\"><img src=\"loader.gif\" alt=\"Loading...\" /></div>}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}